#!/usr/bin/env bash
# vim: ft=sh :

CPANM='https://raw.githubusercontent.com/miyagawa/cpanminus/master/cpanm'

main() {
   # fail fast and fail hard
   set -eo pipefail

   local BUILD_DIR="$(ensure_dir "$1")"
   local CACHE_DIR="$(ensure_dir "$2")"
   local ENV_DIR="$(ensure_dir "$3")"

   if [ -n "$BUILDPACK_VERBOSE" ] ; then
      echo "-----> 'compile' parameters"
      (
         env | sort
         echo ''
         echo "BUILD_DIR [$BUILD_DIR]"
         ls -l "$BUILD_DIR"
         echo "CACHE_DIR [$CACHE_DIR]"
         ls -l "$CACHE_DIR"
         echo "ENV_DIR   [$ENV_DIR]"
         ls -l "$ENV_DIR"
      ) | indent
   fi

   # not sure these actually make sense here, but they don't harm anyway
   export PATH="$BUILD_DIR/local/bin:$PATH"
   export PERL5LIB="$BUILD_DIR/local/lib/perl5:$PERL5LIB"

   # reuse last compilations if available
   copy_local "$CACHE_DIR" "$BUILD_DIR"

   # build what's necessary
   build "$BUILD_DIR" "$ENV_DIR"

   # save compilation in cache for future reuse
   [ -d "$BUILD_DIR/local" ] && copy_local "$BUILD_DIR" "$CACHE_DIR"

   # prepare files with environment for run stage
   prepare_run_environment "$BUILD_DIR"

   return 0
}

_get_var() {
   local VARFILE="$1"
   local DEFAULT="$2"
   if [ -e "$VARFILE" ] ; then
      cat "$VARFILE"
   else
      echo "$DEFAULT"
   fi
}

build() {
   local BUILD_DIR="$1"
   local ENV_DIR="$2"
   local somevar

   # execute in subshell to avoid change directory side effects
   (
      cd "$BUILD_DIR"

      if [ ! -e "$BUILD_DIR/local/bin/cpanm" ]; then
         echo "-----> Bootstrapping cpanm"
         curl -L --silent "$CPANM"        \
            | perl - App::cpanminus 2>&1  \
               --quiet                    \
               --notest                   \
               --no-man-pages             \
               $CPANM_OPTS                \
               -l "$BUILD_DIR/local"      \
            | indent
      fi

      echo "-----> Installing dependencies"

      declare -a EPAN
      local _d d
      for _d in epan dpan ; do
         d="$PWD/$_d"
         [ -d "$d" ] || continue
         EPAN=("${EPAN[@]}" '--mirror' "file://$d")
      done
      if [ "${#EPAN[@]}" -gt 0 ] ; then
         # append "usual" mirrors
         EPAN=("${EPAN[@]}" '--mirror' 'http://www.cpan.org')
      fi
      echo cpanm 2>&1                 \
         --no-man-pages          \
         $CPANM_OPTS             \
         $(_get_var "$ENV/BUILDPACK_CPANM_VERBOSE" '--quiet') \
         $(_get_var "$ENV/BUILDPACK_CPANM_TEST" '--notest')   \
         -l "$BUILD_DIR/local"   \
         "${EPAN[@]}"            \
         --installdeps .         \
         | indent
      cpanm 2>&1                 \
         --no-man-pages          \
         $CPANM_OPTS             \
         $(_get_var "$ENV/BUILDPACK_CPANM_VERBOSE" '--quiet') \
         $(_get_var "$ENV/BUILDPACK_CPANM_TEST" '--notest')   \
         -l "$BUILD_DIR/local"   \
         "${EPAN[@]}"            \
         --installdeps .         \
         | indent
   )
}

prepare_run_environment() {
   local BUILD_DIR="$1"

   mkdir -p "$BUILD_DIR/.profile.d"
   cat > "$BUILD_DIR/.profile.d/perl-env.sh" <<'END'
export PATH="$HOME/local/bin:$HOME/bin:$PATH"
export PERL5LIB="$HOME/local/lib/perl5:$PERL5LIB"
END
}

copy_local() {
   local SOURCE_DIR="$1"
   local DESTINATION_DIR="$2"
   rm -rf "$DESTINATION_DIR/local"
   if [ -d "$SOURCE_DIR/local" ]; then
      cp -a "$SOURCE_DIR/local" "$DESTINATION_DIR"
   fi
}

ensure_dir() {
   mkdir -p "$1"
   readlink -f "$1"
}

indent() {
  sed -u 's/^/       /'
}

main "$@"
