#!/usr/bin/env bash
# vim: ft=sh :

CPANM='https://raw.githubusercontent.com/miyagawa/cpanminus/master/cpanm'

main() {
   # fail fast and fail hard
   set -eo pipefail

   local BUILD_DIR="$(ensure_dir "$1")"
   local CACHE_DIR="$(ensure_dir "$2")"
   local ENV_DIR="$(ensure_dir "$3")"

   [ -n "$BUILDPACK_VERBOSE" ] && __print_build_details

   # not sure these actually make sense here, but they don't harm anyway
   export PATH="$BUILD_DIR/local/bin:$PATH"
   export PERL5LIB="$BUILD_DIR/local/lib/perl5:$PERL5LIB"

   # reuse last compilations if available
   copy_thing local "$CACHE_DIR" "$BUILD_DIR"

   # build what's necessary
   build "$BUILD_DIR" "$ENV_DIR"

   # save compilation in cache for future reuse
   [ -d "$BUILD_DIR/local" ] && copy_thing local "$BUILD_DIR" "$CACHE_DIR"

   # prepare files with environment for run stage
   prepare_run_environment "$BUILD_DIR"

   return 0
}

__print_build_details() {
   echo "-----> 'compile' parameters"
   (
      env | sort
      echo ''
      echo "BUILD_DIR [$BUILD_DIR]"
      ls -l "$BUILD_DIR"
      echo "CACHE_DIR [$CACHE_DIR]"
      ls -l "$CACHE_DIR"
      echo "ENV_DIR   [$ENV_DIR]"
      ls -l "$ENV_DIR"
   ) | indent
}

_get_var() {
   local VARFILE="$1"
   local DEFAULT="$2"
   if [ -e "$VARFILE" ] ; then
      cat "$VARFILE"
   else
      echo "$DEFAULT"
   fi
}

__bootstrap_cpanm() {
   echo "-----> Bootstrapping cpanm"
   curl -L --silent "$CPANM"        \
      | perl - App::cpanminus 2>&1  \
         --quiet                    \
         --notest                   \
         --no-man-pages             \
         $CPANM_OPTS                \
         -l "$BUILD_DIR/local"      \
      | indent
}

__install_perl_dependencies() {
   echo "-----> Installing dependencies"
   declare -a EPAN
   local _d d
   for _d in epan dpan ; do
      d="$PWD/$_d"
      [ -d "$d" ] || continue
      EPAN=("${EPAN[@]}" '--mirror' "file://$d")
   done
   if [ "${#EPAN[@]}" -gt 0 ] ; then
      # append "usual" mirrors and use mirrors for index
      EPAN=("${EPAN[@]}" '--mirror' 'http://www.cpan.org' '--mirror-only')
   fi
   cpanm 2>&1                 \
      --no-man-pages          \
      $CPANM_OPTS             \
      $(_get_var "$ENV/BUILDPACK_CPANM_VERBOSE" '--quiet') \
      $(_get_var "$ENV/BUILDPACK_CPANM_TEST" '--notest')   \
      -l "$BUILD_DIR/local"   \
      "${EPAN[@]}"            \
      --installdeps .         \
      | indent
}

build() {
   local BUILD_DIR="$1"
   local ENV_DIR="$2"

   # execute in subshell to avoid change directory side effects
   (
      cd "$BUILD_DIR"

      local CPANM_OPTS="$(_get_var "$ENV/PERL_CPANM_OPTS" "$CPANM_OPTS")"
      [ ! -e "$BUILD_DIR/local/bin/cpanm" ] && __bootstrap_cpanm
      __install_perl_dependencies
   )
}

prepare_run_environment() {
   local BUILD_DIR="$1"

   mkdir -p "$BUILD_DIR/.profile.d"
   cat > "$BUILD_DIR/.profile.d/perl-env.sh" <<'END'
export PATH="$HOME/local/bin:$HOME/bin:$PATH"
export PERL5LIB="$HOME/local/lib/perl5:$PERL5LIB"
END
}

copy_thing() {
   local THING="$1"
   local SOURCE_DIR="$2"
   local DESTINATION_DIR="$3"
   rm -rf "$DESTINATION_DIR/$THING"
   if [ -d "$SOURCE_DIR/$THING" ]; then
      cp -a "$SOURCE_DIR/$THING" "$DESTINATION_DIR"
   fi

}

ensure_dir() {
   mkdir -p "$1"
   readlink -f "$1"
}

indent() {
  sed -u 's/^/       /'
}

main "$@"
